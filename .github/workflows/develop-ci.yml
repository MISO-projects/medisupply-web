name: Develop Branch CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened]

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        id: format-check
        continue-on-error: true
        run: npm run format:check

      - name: Auto-fix formatting
        if: steps.format-check.outcome == 'failure'
        run: |
          npm run format
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff --staged --quiet || git commit -m "style: auto-fix formatting"
          git push

      - name: Run tests with coverage
        id: tests
        run: |
          npm run test:ci -- --code-coverage > test-output.txt 2>&1 || true
          cat test-output.txt

      - name: Validate coverage threshold (30% minimum)
        run: |
          echo "üìä Validating test coverage threshold..."

          # Extraer porcentajes del output de los tests
          STATEMENTS=$(grep "Statements" test-output.txt | awk '{print $3}' | tr -d '%')
          FUNCTIONS=$(grep "Functions" test-output.txt | awk '{print $3}' | tr -d '%')
          LINES=$(grep "Lines" test-output.txt | awk '{print $3}' | tr -d '%')

          echo ""
          echo "Coverage Results:"
          echo "  Statements: ${STATEMENTS}%"
          echo "  Functions: ${FUNCTIONS}%"
          echo "  Lines: ${LINES}%"
          echo ""

          # Umbral m√≠nimo requerido
          THRESHOLD=30
          FAILED=0

          # Validar usando comparaci√≥n de enteros (cortando decimales)
          STATEMENTS_INT=${STATEMENTS%.*}
          FUNCTIONS_INT=${FUNCTIONS%.*}
          LINES_INT=${LINES%.*}

          if [ "$STATEMENTS_INT" -lt "$THRESHOLD" ]; then
            echo "‚ùå Statements coverage (${STATEMENTS}%) is below ${THRESHOLD}%"
            FAILED=1
          fi

          if [ "$FUNCTIONS_INT" -lt "$THRESHOLD" ]; then
            echo "‚ùå Functions coverage (${FUNCTIONS}%) is below ${THRESHOLD}%"
            FAILED=1
          fi

          if [ "$LINES_INT" -lt "$THRESHOLD" ]; then
            echo "‚ùå Lines coverage (${LINES}%) is below ${THRESHOLD}%"
            FAILED=1
          fi

          if [ $FAILED -eq 1 ]; then
            echo ""
            echo "üö´ Coverage check FAILED! Minimum required: ${THRESHOLD}%"
            exit 1
          fi

          echo "‚úÖ Coverage threshold met! All metrics above ${THRESHOLD}%"

      - name: Build project
        run: npm run build:prod
